name: Release

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Dry run (no actual release)'
        required: false
        default: false
        type: boolean

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'yarn'
          token: ${{ secrets.GH_ACTION_TOKEN }}

      - name: Install dependencies
        run: yarn --frozen-lockfile --prefer-offline

      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACTION_TOKEN }}
        with:
          dry_run: ${{ inputs.dry_run }}

  build:
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest, macos-latest]
        include:
          - platform: windows-latest
            args: ''
            output_name: shopify-sync_${{ needs.release.outputs.new_release_version }}_x64_windows
          - platform: macos-latest
            args: '--target aarch64-apple-darwin'
            output_name: shopify-sync_${{ needs.release.outputs.new_release_version }}_x64_macos

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'yarn'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install dependencies
        run: yarn --frozen-lockfile --prefer-offline

      - name: Build Tauri App
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACTION_TOKEN }}
        with:
          tagName: v${{ needs.release.outputs.new_release_version }}
          args: ${{ matrix.args }} --config '{"version":"${{ needs.release.outputs.new_release_version }}"}'
